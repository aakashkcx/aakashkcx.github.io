---
import { type InferGetStaticPropsType } from "astro";
import { Image } from "astro:assets";
import { getCollection, render } from "astro:content";

import DateTime from "@/components/datetime.astro";
import Prose from "@/components/prose.astro";
import { Badge } from "@/components/ui/badge";
import LayoutBlog from "@/layouts/layout-blog.astro";

export async function getStaticPaths() {
  return (await getCollection("posts")).map((post) => ({
    params: { id: post.id },
    props: { post },
  }));
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { post } = Astro.props;

const { Content } = await render(post);
---

<LayoutBlog title={post.data.title} description={post.data.description}>
  <h1 class="text-center text-4xl font-semibold tracking-tight sm:text-left">
    {post.data.title}
  </h1>
  {
    post.data.image && (
      <Image
        src={post.data.image.src}
        alt={post.data.image.alt}
        class="mx-auto max-h-100 w-fit rounded-xl"
      />
    )
  }
  <section class="flex flex-col gap-5">
    <div
      class="text-muted-foreground flex flex-col justify-between gap-3 sm:flex-row"
    >
      <div>Published <DateTime dt={post.data.created} time /></div>
      {
        post.data.updated && (
          <div>
            Updated <DateTime dt={post.data.updated} time />
          </div>
        )
      }
    </div>
    <div class="flex flex-wrap gap-3">
      {
        post.data.tags.map((tag) => (
          <Badge asLink href={`/blog/tag/${tag}`} size="lg">
            {tag}
          </Badge>
        ))
      }
    </div>
  </section>
  <Prose>
    <Content />
  </Prose>
</LayoutBlog>
