---
import { type InferGetStaticPropsType } from "astro";
import { Image } from "astro:assets";
import { getCollection } from "astro:content";

import DateTime from "@/components/datetime.astro";
import { Badge } from "@/components/ui/badge";
import LayoutBlog from "@/layouts/layout-blog.astro";

export async function getStaticPaths() {
  const posts = (await getCollection("posts"))
    .filter((post) => post.data.published)
    .toSorted((a, b) => b.data.created.valueOf() - a.data.created.valueOf());
  const tags = Array.from(new Set(posts.flatMap((post) => post.data.tags)));

  return tags.map((tag) => ({
    params: { id: tag },
    props: { tag, posts: posts.filter((post) => post.data.tags.includes(tag)) },
  }));
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { tag, posts } = Astro.props;

const title = `Tag: ${tag}`;
---

<LayoutBlog title={title}>
  <header
    class="flex flex-row items-center justify-center gap-3 font-semibold sm:justify-start"
  >
    <h1 class="text-4xl tracking-tight">Tag:</h1>
    <Badge size="lg" className="px-4 text-3xl">{tag}</Badge>
  </header>
  <section class="flex flex-col gap-10">
    {
      posts.map((post) => (
        <a
          href={`/blog/post/${post.id}`}
          class="group flex flex-col gap-5 sm:flex-row sm:gap-7.5"
        >
          <Image
            src={post.data.image.src}
            alt={post.data.image.alt}
            class="max-h-75 self-center rounded-xl object-cover sm:size-50"
          />
          <div class="flex grow flex-col gap-3">
            <p class="text-muted-foreground group-hover:text-foreground text-sm transition-colors">
              <DateTime dt={post.data.created} />
            </p>
            <h4 class="line-clamp-2 font-serif text-xl font-semibold tracking-tight">
              {post.data.title}
            </h4>
            <p class="text-muted-foreground group-hover:text-foreground line-clamp-3 font-serif transition-colors">
              {post.data.description}
            </p>
            <div class="flex flex-wrap gap-3">
              {post.data.tags.map((tag) => (
                <Badge className="bg-muted-foreground group-hover:bg-primary transition-colors">
                  {tag}
                </Badge>
              ))}
            </div>
          </div>
        </a>
      ))
    }
  </section>
</LayoutBlog>
